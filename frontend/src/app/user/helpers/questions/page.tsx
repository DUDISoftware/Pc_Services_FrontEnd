"use client";

import { useState } from "react";
import { ChevronDown, ChevronUp } from "lucide-react";

interface FAQ {
  question: string;
  answer: string;
  category: string;
}

export default function QuestionsPage() {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const faqs: FAQ[] = [
    // üñ•Ô∏è S·∫¢N PH·∫®M & B·∫¢O H√ÄNH
    {
      category: "S·∫£n ph·∫©m & B·∫£o h√†nh",
      question: "Linh ki·ªán laptop/PC t·∫°i c·ª≠a h√†ng c√≥ ch√≠nh h√£ng kh√¥ng?",
      answer:
        "T·∫•t c·∫£ linh ki·ªán ƒë∆∞·ª£c cung c·∫•p ƒë·ªÅu l√† h√†ng ch√≠nh h√£ng, c√≥ ƒë·∫ßy ƒë·ªß tem, m√£ QR v√† ch·ª©ng nh·∫≠n t·ª´ nh√† s·∫£n xu·∫•t. Ch√∫ng t√¥i cam k·∫øt kh√¥ng b√°n h√†ng tr√¥i n·ªïi ho·∫∑c k√©m ch·∫•t l∆∞·ª£ng.",
    },
    {
      category: "S·∫£n ph·∫©m & B·∫£o h√†nh",
      question: "Th·ªùi gian b·∫£o h√†nh linh ki·ªán l√† bao l√¢u?",
      answer:
        "Th·ªùi gian b·∫£o h√†nh ph·ª• thu·ªôc v√†o t·ª´ng lo·∫°i s·∫£n ph·∫©m: RAM, SSD, HDD, mainboard th∆∞·ªùng t·ª´ 12 ƒë·∫øn 36 th√°ng. B·∫°n c√≥ th·ªÉ ki·ªÉm tra chi ti·∫øt tr√™n trang s·∫£n ph·∫©m.",
    },
    {
      category: "S·∫£n ph·∫©m & B·∫£o h√†nh",
      question: "C√≥ h·ªó tr·ª£ l·∫Øp r√°p PC theo y√™u c·∫ßu kh√¥ng?",
      answer:
        "Ch√∫ng t√¥i c√≥ d·ªãch v·ª• build PC theo c·∫•u h√¨nh mong mu·ªën. B·∫°n ch·ªâ c·∫ßn g·ª≠i y√™u c·∫ßu, ƒë·ªôi ng≈© k·ªπ thu·∫≠t s·∫Ω t∆∞ v·∫•n c·∫•u h√¨nh t·ªëi ∆∞u v·ªÅ hi·ªáu nƒÉng v√† chi ph√≠.",
    },
    {
      category: "S·∫£n ph·∫©m & B·∫£o h√†nh",
      question: "L√†m sao ƒë·ªÉ ki·ªÉm tra t√¨nh tr·∫°ng ƒë∆°n h√†ng?",
      answer:
        "B·∫°n c√≥ th·ªÉ v√†o m·ª•c 'ƒê∆°n h√†ng c·ªßa t√¥i' trong t√†i kho·∫£n ho·∫∑c ki·ªÉm tra b·∫±ng m√£ ƒë∆°n h√†ng ƒë∆∞·ª£c g·ª≠i qua email sau khi thanh to√°n.",
    },

    // üí≥ THANH TO√ÅN & GIAO H√ÄNG
    {
      category: "Thanh to√°n & Giao h√†ng",
      question: "C√≥ nh·ªØng h√¨nh th·ª©c thanh to√°n n√†o ƒë∆∞·ª£c h·ªó tr·ª£?",
      answer:
        "Ch√∫ng t√¥i h·ªó tr·ª£ thanh to√°n qua ti·ªÅn m·∫∑t khi nh·∫≠n h√†ng (COD), chuy·ªÉn kho·∫£n ng√¢n h√†ng, v√† thanh to√°n tr·ª±c tuy·∫øn qua th·∫ª VISA/MasterCard.",
    },
    {
      category: "Thanh to√°n & Giao h√†ng",
      question: "Ph√≠ giao h√†ng ƒë∆∞·ª£c t√≠nh nh∆∞ th·∫ø n√†o?",
      answer:
        "Mi·ªÖn ph√≠ giao h√†ng n·ªôi th√†nh H·ªì Ch√≠ Minh cho ƒë∆°n h√†ng t·ª´ 1.000.000ƒë tr·ªü l√™n. Ngo√†i ra, ch√∫ng t√¥i h·ªó tr·ª£ giao h√†ng to√†n qu·ªëc v·ªõi m·ª©c ph√≠ t√≠nh theo ƒë∆°n v·ªã v·∫≠n chuy·ªÉn.",
    },
    {
      category: "Thanh to√°n & Giao h√†ng",
      question: "Th·ªùi gian giao h√†ng d·ª± ki·∫øn l√† bao l√¢u?",
      answer:
        "ƒê·ªëi v·ªõi khu v·ª±c n·ªôi th√†nh TP.HCM: 1‚Äì2 ng√†y l√†m vi·ªác. C√°c t·ªânh th√†nh kh√°c: 2‚Äì5 ng√†y t√πy kho·∫£ng c√°ch v√† ƒë∆°n v·ªã v·∫≠n chuy·ªÉn.",
    },
    {
      category: "Thanh to√°n & Giao h√†ng",
      question: "C√≥ th·ªÉ h·ªßy ƒë∆°n h√†ng sau khi ƒë√£ ƒë·∫∑t kh√¥ng?",
      answer:
        "B·∫°n c√≥ th·ªÉ h·ªßy ƒë∆°n h√†ng trong v√≤ng 2 gi·ªù k·ªÉ t·ª´ khi ƒë·∫∑t. N·∫øu ƒë∆°n ƒë√£ chuy·ªÉn sang tr·∫°ng th√°i 'ƒêang giao h√†ng', vui l√≤ng li√™n h·ªá hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.",
    },

    // üîÅ CH√çNH S√ÅCH ƒê·ªîI TR·∫¢
    {
      category: "Ch√≠nh s√°ch ƒë·ªïi tr·∫£",
      question: "ƒêi·ªÅu ki·ªán ƒë·ªïi tr·∫£ s·∫£n ph·∫©m l√† g√¨?",
      answer:
        "S·∫£n ph·∫©m ph·∫£i c√≤n nguy√™n v·∫πn, kh√¥ng tr·∫ßy x∆∞·ªõc, ƒë·∫ßy ƒë·ªß ph·ª• ki·ªán, tem b·∫£o h√†nh v√† h√≥a ƒë∆°n mua h√†ng. Th·ªùi gian ƒë·ªïi tr·∫£ t·ªëi ƒëa l√† 7 ng√†y k·ªÉ t·ª´ khi nh·∫≠n h√†ng.",
    },
    {
      category: "Ch√≠nh s√°ch ƒë·ªïi tr·∫£",
      question: "Tr∆∞·ªùng h·ª£p n√†o kh√¥ng ƒë∆∞·ª£c ƒë·ªïi tr·∫£?",
      answer:
        "Ch√∫ng t√¥i kh√¥ng ch·∫•p nh·∫≠n ƒë·ªïi tr·∫£ v·ªõi c√°c s·∫£n ph·∫©m ƒë√£ qua s·ª≠ d·ª•ng, b·ªã t√°c ƒë·ªông v·∫≠t l√Ω (r∆°i, v·ª°, ch√°y n·ªï) ho·∫∑c l·ªói do ng∆∞·ªùi d√πng g√¢y ra.",
    },
    {
      category: "Ch√≠nh s√°ch ƒë·ªïi tr·∫£",
      question: "Th·ªùi gian ho√†n ti·ªÅn sau khi ƒë·ªïi tr·∫£ l√† bao l√¢u?",
      answer:
        "Th·ªùi gian ho√†n ti·ªÅn dao ƒë·ªông t·ª´ 3‚Äì5 ng√†y l√†m vi·ªác, t√πy theo ph∆∞∆°ng th·ª©c thanh to√°n ban ƒë·∫ßu. Ch√∫ng t√¥i s·∫Ω th√¥ng b√°o qua email khi giao d·ªãch ho√†n t·∫•t.",
    },

    // üß∞ D·ªäCH V·ª§ S·ª¨A CH·ªÆA
    {
      category: "D·ªãch v·ª• s·ª≠a ch·ªØa",
      question: "C·ª≠a h√†ng c√≥ nh·∫≠n s·ª≠a mainboard, card ƒë·ªì h·ªça kh√¥ng?",
      answer:
        "C√≥. Trung t√¢m k·ªπ thu·∫≠t c·ªßa ch√∫ng t√¥i nh·∫≠n ki·ªÉm tra v√† s·ª≠a ch·ªØa c√°c linh ki·ªán laptop, PC, card ƒë·ªì h·ªça, m√†n h√¨nh v√† nhi·ªÅu thi·∫øt b·ªã kh√°c.",
    },
    {
      category: "D·ªãch v·ª• s·ª≠a ch·ªØa",
      question: "Quy tr√¨nh ti·∫øp nh·∫≠n v√† s·ª≠a ch·ªØa di·ªÖn ra nh∆∞ th·∫ø n√†o?",
      answer:
        "1Ô∏è‚É£ Ti·∫øp nh·∫≠n thi·∫øt b·ªã v√† ghi nh·∫≠n t√¨nh tr·∫°ng. 2Ô∏è‚É£ K·ªπ thu·∫≠t vi√™n ki·ªÉm tra v√† b√°o gi√°. 3Ô∏è‚É£ Kh√°ch h√†ng x√°c nh·∫≠n s·ª≠a ch·ªØa. 4Ô∏è‚É£ Ti·∫øn h√†nh s·ª≠a. 5Ô∏è‚É£ Giao l·∫°i thi·∫øt b·ªã k√®m bi√™n b·∫£n b·∫£o h√†nh.",
    },
    {
      category: "D·ªãch v·ª• s·ª≠a ch·ªØa",
      question: "C√≥ h·ªó tr·ª£ s·ª≠a ch·ªØa t·∫°i nh√† kh√¥ng?",
      answer:
        "Ch√∫ng t√¥i h·ªó tr·ª£ s·ª≠a ch·ªØa t·∫°i nh√† trong ph·∫°m vi TP.HCM. Vui l√≤ng li√™n h·ªá hotline ho·∫∑c ƒë·∫∑t l·ªãch tr∆∞·ªõc 24h ƒë·ªÉ s·∫Øp x·∫øp k·ªπ thu·∫≠t vi√™n.",
    },
    {
      category: "D·ªãch v·ª• s·ª≠a ch·ªØa",
      question: "Thi·∫øt b·ªã sau khi s·ª≠a c√≥ ƒë∆∞·ª£c b·∫£o h√†nh kh√¥ng?",
      answer:
        "M·ªói linh ki·ªán thay th·∫ø ho·∫∑c d·ªãch v·ª• s·ª≠a ch·ªØa ƒë·ªÅu ƒë∆∞·ª£c b·∫£o h√†nh t·ªëi thi·ªÉu 30 ng√†y, t√πy theo lo·∫°i h√¨nh d·ªãch v·ª• v√† linh ki·ªán s·ª≠ d·ª•ng.",
    },
  ];

  // T√°ch nh√≥m theo category
  const groupedFaqs = faqs.reduce((acc, faq) => {
    if (!acc[faq.category]) acc[faq.category] = [];
    acc[faq.category].push(faq);
    return acc;
  }, {} as Record<string, FAQ[]>);

  return (
    <div className="max-w-5xl mx-auto px-4 py-10">
      <h1 className="text-3xl font-bold mb-8 text-center">
        ‚ùì C√¢u h·ªèi th∆∞·ªùng g·∫∑p
      </h1>

      {Object.entries(groupedFaqs).map(([category, items], idx) => (
        <div key={idx} className="mb-10">
          <h2 className="text-xl font-semibold mb-4 border-l-4 border-blue-500 pl-3">
            {category}
          </h2>

          <div className="space-y-3">
            {items.map((faq, i) => {
              const isOpen = openIndex === i + idx * 100; // tr√°nh tr√πng index
              return (
                <div
                  key={i}
                  className="border rounded-lg shadow-sm bg-white overflow-hidden"
                >
                  <button
                    onClick={() =>
                      setOpenIndex(isOpen ? null : i + idx * 100)
                    }
                    className="w-full flex justify-between items-center px-4 py-3 text-left font-medium text-gray-800 hover:bg-gray-50"
                  >
                    {faq.question}
                    {isOpen ? (
                      <ChevronUp className="w-5 h-5 text-blue-600" />
                    ) : (
                      <ChevronDown className="w-5 h-5 text-gray-500" />
                    )}
                  </button>
                  {isOpen && (
                    <div className="px-4 py-3 text-gray-600 border-t bg-gray-50 animate-fadeIn">
                      {faq.answer}
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        </div>
      ))}
    </div>
  );
}
